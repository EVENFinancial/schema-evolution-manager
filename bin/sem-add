#!/usr/bin/env ruby
# == Adds a database upgrade script to this repository.
#
# == Usage
#  sem-add <path>
#
# == Example
#  sem-add ./new-script.sql
#

load File.join(File.dirname(__FILE__), 'sem-config')

file = ARGV.shift
if file.to_s.strip == ""
  puts "**** ERROR: Need file path"
  SchemaEvolutionManager::RdocUsage.printAndExit(1)
end

SchemaEvolutionManager::Preconditions.check_state(File.exist?(file), "File[#{file}] could not be found")
SchemaEvolutionManager::Preconditions.check_state(file.match(/\.sql/i), "File[#{file}] must end with .sql")

scripts_dir = File.join(`pwd`.strip, "scripts")
SchemaEvolutionManager::Library.ensure_dir!(scripts_dir)

contents = IO.read(file)
now = Time.now.strftime('%Y%m%d-%H%M%S')
target = File.join(scripts_dir, "#{now}.sql")

padding = 1000
counter = 0
while File.exist?(target)
  counter += 1
  if counter >= padding * 10
    raise "ERROR: Cannot add more than #{padding * 10} files / second. Doing so would break the implementation of lexicographically sorted filenames"
  end
  # The .z prefix is here to ensure these files sort AFTER the first
  # .sql file. Maintaining lexicographic sorting is important to
  # support simple command line tools (e.g. ls)
  target = File.join(scripts_dir, "#{now}.z#{padding + counter}.sql")
end

puts "Adding #{target}"
SchemaEvolutionManager::Library.system_or_error("mv #{file} #{target}")
SchemaEvolutionManager::Library.system_or_error("git add #{target}")

puts "File staged in git. You need to commit and push"
